#!/usr/bin/lua

Report = {
    -- Table where we store all the items we find, and the number of times we
    -- found them
    items = {},

    -- Metadata items that we do not want in the output
    blacklist = { assigneddataset=true, reftime=true },

    -- Compute the string to use to represent the metadata item
    hash = function (self, name, val)
        if self.blacklist[name] then
            return nil
        end
        return name..': '..tostring(val)
    end,

    -- Process a metadata item
    readMetadata = function (self, md)
        for name, val in md.iter() do
            o = self.hash(self, name, val)
            if o ~= nil then
                count = self.items[o] or 0
                self.items[o] = count + 1
            end
        end
    end,

    -- Process a summary
    readSummary = function (self, s)
	for idx, entry in ipairs(s.data()) do
	    item, stats = unpack(entry)
            for name, val in pairs(item) do
                o = self.hash(self, name, val)
                if o ~= nil then
                    count = self.items[o] or 0
                    self.items[o] = count + stats.count()
                end
            end
        end
    end,

    -- Produce the final report
    report = function (self)
        keys = {}

        for k in pairs(self.items) do
            table.insert(keys, k)
        end
        table.sort(keys)

        for i, k in pairs(keys) do
            print (self.items[k], k)
        end
    end
}
