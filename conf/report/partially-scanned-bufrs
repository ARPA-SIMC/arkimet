#!/usr/bin/lua

-- Detect BUFR messages that are scanned only partially
--
-- It outputs a dd command per failing BUFR that can be used to isolate the
-- offending data.

Report = {
    -- Table where we store the source elements of all noninterpreted BUFRs we
    -- find
    res = {},
    count = 0,
    count_bad = 0,

    -- Process a metadata item
    readMetadata = function (self, md)
        local source = md.source
        self.count = self.count + 1
        if source.format == "bufr" then
            local prod = md.product
            if prod.val.t == nil then
                table.insert(self.res, source)
                self.count_bad = self.count_bad + 1
            end
        end
    end,

    -- Process a summary
    readSummary = function (self, s)
        -- Nothing to do here
    end,

    -- Produce the final report
    report = function (self)
        for i, s in pairs(self.res) do
            print(string.format("dd if=%s bs=1 skip=%d count=%d", s.file, s.offset, s.size))
        end
        if self.count_bad == 0 then
            print(string.format("All %d data were ok", self.count))
        else
            print(string.format("%d/%d were not ok", self.count_bad, self.count))
        end
    end
}
