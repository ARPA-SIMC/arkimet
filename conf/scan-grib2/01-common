-- Reference time
arki.year = grib.year
arki.month = grib.month
arki.day = grib.day
arki.hour = grib.hour
arki.minute = grib.minute
arki.second = grib.second

-- Run
arki.run_hour = grib.hour
arki.run_minute = grib.minute

-- Origin
arki.centre = gribl.centre
arki.subcentre = gribl.subCentre
arki.processtype = gribl.typeOfGeneratingProcess
arki.bgprocessid = gribl.backgroundGeneratingProcessIdentifier
arki.processid = gribl.generatingProcessIdentifier

-- Product
arki.discipline = gribl.discipline
arki.category = gribl.parameterCategory
arki.number = gribl.parameterNumber

-- Level
arki.ltype1  = gribl.typeOfFirstFixedSurface
if gribl.scaleFactorOfFirstFixedSurface == -1 then
	arki.lscale1 = 0
	arki.lvalue1 = 0
else
	arki.lscale1 = gribl.scaleFactorOfFirstFixedSurface
	arki.lvalue1 = gribl.scaledValueOfFirstFixedSurface
end

if grib.typeOfSecondFixedSurface and grib.typeOfSecondFixedSurface ~= 255 then
	arki.ltype2 =  grib.typeOfSecondFixedSurface
	if gribl.scaleFactorOfSecondFixedSurface == -1 then
		arki.lscale2 = 0
		arki.lvalue2 = 0
	else
		arki.lscale2 = grib.scaleFactorOfSecondFixedSurface
		arki.lvalue2 = grib.scaledValueOfSecondFixedSurface
	end
end

-- Time range
if grib.productDefinitionTemplateNumber then
	arki.ptype = grib.productDefinitionTemplateNumber
else
	arki.ptype = 0
end

arki.punit = gribl.stepUnits
if gribl.lengthOfTimeRange ~= nil then
	arki.p1 = gribl.lengthOfTimeRange
else
	arki.p1 = 0
end
arki.p2 = gribl.endStep

function norm_lon(lon)
	if lon > 180 then
		return lon - 360
	else
		return lon
	end
end

-- Area
arki.area.type = grib.gridDefinitionTemplateNumber

arki.area.latfirst = grib.latitudeOfFirstGridPointInDegrees
arki.area.lonfirst = grib.longitudeOfFirstGridPointInDegrees

if grib.numberOfPointsAlongAParallel then
	arki.area.Ni = grib.numberOfPointsAlongAParallel
	arki.area.Nj = grib.numberOfPointsAlongAMeridian
	arki.area.latlast = grib.latitudeOfLastGridPointInDegrees
	arki.area.lonlast = grib.longitudeOfLastGridPointInDegrees
end
if grib.numberOfPointsAlongXAxis then
	arki.area.Ni = grib.numberOfPointsAlongXAxis
	arki.area.Nj = grib.numberOfPointsAlongYAxis
end
if grib.angleOfRotationInDegrees then
	arki.area.rot = grib.angleOfRotationInDegrees
	arki.area.latp = latitudeOfSouthernPoleInDegrees
	arki.area.lonp = longitudeOfSouthernPoleInDegrees
end


-- Ensemble
if grib.typeOfProcessedData >= 3 and grib.typeOfProcessedData <= 5 then
	arki.ensemble.ty = grib.typeOfEnsembleForecast
	arki.ensemble.pf = grib.perturbationNumber
	arki.ensemble.tf = grib.numberOfForecastsInEnsemble
	if grib.derivedForecast then
		arki.ensemble.d = grib.derivedForecast
	end
end
