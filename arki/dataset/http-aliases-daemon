#!/usr/bin/python3

import argparse
import logging
import sys
import http.server


class Handler(http.server.BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == "/aliases":
            self.send_response(200)
            self.end_headers()
            self.wfile.write("""
[level]
g00    = GRIB1,1 or GRIB2S,1,0,0
""".encode())
        else:
            self.send_response(404)
            self.end_headers()
            self.wfile.write("{} not found\n".format(self.path).encode())

    def log_message(self, fmt, *args, **kw):
        logging.info(fmt, *args, **kw)


def main():
    parser = argparse.ArgumentParser(description="HTTP server to test code fetching match aliases")
    parser.add_argument("--verbose", "-v", action="store_true", help="verbose output")
    parser.add_argument("--debug", action="store_true", help="debug output")
    args = parser.parse_args()

    # Setup logging
    FORMAT = "%(asctime)-15s %(levelname)s %(message)s"
    if args.debug:
        logging.basicConfig(level=logging.DEBUG, stream=sys.stderr, format=FORMAT)
    elif args.verbose:
        logging.basicConfig(level=logging.INFO, stream=sys.stderr, format=FORMAT)
    else:
        logging.basicConfig(level=logging.WARN, stream=sys.stderr, format=FORMAT)

    PORT = 18001

    with http.server.HTTPServer(("localhost", PORT), Handler) as httpd:
        print("OK {}".format(PORT))
        sys.stdout.flush()
        httpd.serve_forever()


if __name__ == "__main__":
    main()
