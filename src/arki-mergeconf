#!/usr/bin/python3
import arkimet as arki
import sys
import argparse
import logging

log = logging.getLogger("arki-mergeconf")


class Fail(Exception):
    pass


def main():
    parser = argparse.ArgumentParser(
                description="Description: Read dataset configuration from the given directories or config"
                            "files,  merge them and output the merged config file to standard output")
    parser.add_argument("--verbose", "-v", action="store_true",
                        help="verbose output")
    parser.add_argument("--debug", action="store_true",
                        help="debug output")
    parser.add_argument("--version", action="store_true",
                        help="print the program version and exit")
    parser.add_argument("-o", "--output", metavar="file",
                        help="write the output to the given file instead of standard output")
    parser.add_argument("--extra", action="store_true",
                        help="extract extra information from the datasets (such as bounding box)"
                             " and include it in the configuration")
    parser.add_argument("--ignore-system-datasets", action="store_true",
                        help="ignore error and duplicates datasets")
    parser.add_argument("--restrict", metavar="names", action="store",
                        help="restrict operations to only those datasets that allow one of the given"
                             " (comma separated) names")
    parser.add_argument("-C", "--config", metavar="file", action="append",
                        help="merge configuration from the given file (can be given more than once)")
    parser.add_argument("sources", nargs="*", action="store",
                        help="datasets, configuration files or remote urls")

    args = parser.parse_args()

    if args.version:
        print(arki.get_version())
        sys.exit()

    log_format = "%(levelname)s %(message)s"
    level = logging.WARN
    if args.debug:
        level = logging.DEBUG
    elif args.verbose:
        level = logging.INFO
    logging.basicConfig(level=level, stream=sys.stderr, format=log_format)

    arki_mergeconf = arki.ArkiMergeconf()
    merged = arki_mergeconf.run(
        args.sources,
        cfgfiles=args.config if args.config else None,
        restrict=args.restrict,
        ignore_system_ds=args.ignore_system_datasets,
        extra=args.extra,
    )

    # Output the merged configuration
    if args.output:
        with open(args.output, "wt") as fd:
            merged.write(fd)
    else:
        merged.write(sys.stdout)


if __name__ == "__main__":
    main()
